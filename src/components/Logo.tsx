import { useId } from 'react'
import clsx from 'clsx'

export function Logomark({
  invert = false,
  filled = false,
  ...props
}: React.ComponentPropsWithoutRef<'svg'> & {
  invert?: boolean
  filled?: boolean
}) {
  let id = useId()

  return (
    <svg viewBox="0 0 32 32" aria-hidden="true" {...props}>
      <rect
        clipPath={`url(#${id}-clip)`}
        className={clsx(
          'h-8 transition-all duration-300',
          invert ? 'fill-white' : 'fill-neutral-950',
          filled ? 'w-8' : 'w-0 group-hover/logo:w-8',
        )}
      />
      <use
        href={`#${id}-path`}
        className={invert ? 'stroke-white' : 'stroke-neutral-950'}
        fill="none"
        strokeWidth="1.5"
      />
      <defs>
        <path
          id={`${id}-path`}
          d="M3.25 26v.75H7c1.305 0 2.384-.21 3.346-.627.96-.415 1.763-1.02 2.536-1.752.695-.657 1.39-1.443 2.152-2.306l.233-.263c.864-.975 1.843-2.068 3.071-3.266 1.209-1.18 2.881-1.786 4.621-1.786h5.791V5.25H25c-1.305 0-2.384.21-3.346.627-.96.415-1.763 1.02-2.536 1.751-.695.658-1.39 1.444-2.152 2.307l-.233.263c-.864.975-1.843 2.068-3.071 3.266-1.209 1.18-2.881 1.786-4.621 1.786H3.25V26Z"
        />
        <clipPath id={`${id}-clip`}>
          <use href={`#${id}-path`} />
        </clipPath>
      </defs>
    </svg>
  )

  

}export function Logo({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<'svg'> & {
  invert?: boolean
  filled?: boolean
  fillOnHover?: boolean
}) {
  return (
    
    <svg

      viewBox="0 0 130 32"
      aria-hidden="true"
      className={clsx(fillOnHover && 'group/logo', className)}
      {...props}
    >
      <Logomark
        preserveAspectRatio="xMinYMid meet"
        invert={invert}
        filled={filled}
      />
      <path
        className={invert ? 'fill-white' : 'fill-neutral-950' }
        d="M 35.06 14.24 L 33.26 14.24 L 33.26 0.24 L 35.92 0.24 L 39.8 9.1 L 43.62 0.24 L 46.34 0.24 L 46.34 14.24 L 44.44 14.24 L 44.44 2.66 L 40.7 11.08 L 38.82 11.08 L 35.06 2.66 L 35.06 14.24 Z M 48.74 13.06 L 49.7 11.46 Q 50.42 12.06 51.32 12.44 Q 52.22 12.82 53.42 12.82 A 5.596 5.596 0 0 0 54.329 12.751 Q 55.145 12.616 55.7 12.22 A 2.056 2.056 0 0 0 56.259 11.639 Q 56.522 11.218 56.539 10.673 A 2.423 2.423 0 0 0 56.54 10.6 A 2.388 2.388 0 0 0 56.473 10.021 A 1.963 1.963 0 0 0 56.3 9.57 Q 56.061 9.122 55.377 8.694 A 5.256 5.256 0 0 0 55.37 8.69 Q 54.68 8.26 53.34 7.76 Q 52.321 7.364 51.592 6.962 A 7.899 7.899 0 0 1 51.04 6.63 A 4.386 4.386 0 0 1 50.422 6.141 Q 50.03 5.763 49.81 5.33 A 3.333 3.333 0 0 1 49.506 4.396 A 4.586 4.586 0 0 1 49.44 3.6 Q 49.44 2.6 49.99 1.79 Q 50.54 0.98 51.61 0.49 A 5.112 5.112 0 0 1 52.79 0.123 Q 53.317 0.023 53.918 0.004 A 9.045 9.045 0 0 1 54.2 0 Q 55.44 0 56.43 0.25 Q 57.42 0.5 58.36 0.96 L 57.66 2.58 Q 56.98 2.18 56.07 1.91 Q 55.16 1.64 54.16 1.64 Q 52.84 1.64 52.08 2.16 A 1.98 1.98 0 0 0 51.647 2.553 A 1.472 1.472 0 0 0 51.32 3.5 A 2.093 2.093 0 0 0 51.378 4.004 A 1.712 1.712 0 0 0 51.54 4.42 A 1.382 1.382 0 0 0 51.754 4.705 Q 51.994 4.957 52.41 5.2 Q 53.06 5.58 54.36 6.06 A 16.246 16.246 0 0 1 55.356 6.466 Q 55.842 6.685 56.243 6.911 A 7.101 7.101 0 0 1 56.83 7.28 Q 57.576 7.804 57.965 8.403 A 2.846 2.846 0 0 1 58.12 8.67 A 3.516 3.516 0 0 1 58.468 9.843 A 4.431 4.431 0 0 1 58.5 10.38 A 4.342 4.342 0 0 1 58.367 11.48 A 3.421 3.421 0 0 1 57.85 12.6 A 3.924 3.924 0 0 1 56.464 13.805 A 4.871 4.871 0 0 1 56.05 14 A 6.104 6.104 0 0 1 54.568 14.401 A 8.005 8.005 0 0 1 53.42 14.48 Q 51.96 14.48 50.76 14.09 A 7.641 7.641 0 0 1 49.687 13.654 A 5.687 5.687 0 0 1 48.74 13.06 Z M 7.28 14.24 L 5.14 14.24 L 0 0.74 L 1.86 0.02 L 6.26 12.16 L 10.68 0.08 L 12.4 0.74 L 7.28 14.24 Z M 31.26 13.74 L 29.52 14.44 L 27.96 10.44 L 21.48 10.44 L 19.92 14.4 L 18.3 13.74 L 23.78 0.24 L 25.86 0.24 L 31.26 13.74 Z M 16.3 14.24 L 14.4 14.24 L 14.4 0.24 L 16.3 0.24 L 16.3 14.24 Z M 24.72 2.12 L 22.08 8.84 L 27.34 8.84 L 24.72 2.12 Z"
      />
    </svg>
    
    
  )
}
